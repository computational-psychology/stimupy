[project]
name = "stimupy"
description = "Stimuli for vision science, as image arrays"
readme = "README.md"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
]
keywords = ["stimulus", "visual perception", "psychophysics"]

license = { file = "LICENSE" }
authors = [
  { name = "Lynn Schmittwilken", email = "l.schmittwilken@tu-berlin.de" },
  { name = "Joris Vincent", email = "j.vincent@tu-berlin.de" },
  { name = "Matko Matic" },
  { name = "Guillermo Aguilar" },
  { name = "Marianne Maertens" },
]
maintainers = [
  { name = "Lynn Schmittwilken", email = "l.schmittwilken@tu-berlin.de" },
  { name = "Joris Vincent", email = "j.vincent@tu-berlin.de" },
]
version = "1.1.0"

requires-python = ">=3.6"
dependencies = ["numpy", "scipy", "matplotlib", "pandas", "Pillow"]

[project.optional-dependencies]
dev = ["pytest", "black", "pyupgrade", "flake8"]
docs = [
  "jupyter-book==0.14",
  "jupytext>=1.13.3",
  "jupyterlab_myst",
  "myst_nb",
  "ipywidgets",
  "sphinx-hoverxref",
]

[project.urls]
repository = "https://github.com/computational-psychology/stimupy.git"

[build-system]
requires = ["setuptools >= 40.9.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."] # list of folders that contain the packages (["."] by default)
include = [
  "stimupy*",
] # package names should match these glob patterns (["*"] by default)
namespaces = false # to disable scanning PEP 420 namespaces (true by default)

# [tool.setuptools.dynamic]
# version = {attr = "stimupy.__version__"}

[tool.black]
line-length = 99
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 99

[tool.semantic_release]
commit_message = "v{version}\n\nThis commit was automatically generated by python-semantic-release"
major_on_zero = true
tag_format = "v{version}"
version_variables = [ # version location(s)
  "stimupy/__init__.py:__version__", # in the init.py, so that stimupy.__version__ works
  "pyproject.toml:version",          # in this pyproject.toml
]
build_command = "pip3 install --upgrade build; python3 -m build"

[tool.semantic_release.branches.main]
match = "(main|master|build_.*)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.remote]
name = "origin"
type = "github"

[tool.semantic_release.publish]
upload_to_vcs_release = true # upload sdist, wheel to release-tag
